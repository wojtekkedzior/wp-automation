bookkeeper:
  component: bookie
  metadata:
    ## Set the resources used for running `bin/bookkeeper shell initnewcluster`
    ##
    resources:
      # requests:
        # memory: 4Gi
        # cpu: 2
  replicaCount: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  # This is how prometheus discovers this component
  podMonitor:
    enabled: true
    interval: 10s
    scrapeTimeout: 10s
  # True includes annotation for statefulset that contains hash of corresponding configmap, which will cause pods to restart on configmap change
  restartPodsOnConfigMapChange: false
  ports:
    http: 8000
    bookie: 3181
    statestore: 4181
  # nodeSelector:
    # cloud.google.com/gke-nodepool: default-pool
  probe:
    liveness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    readiness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
  affinity:
    anti_affinity: false
    anti_affinity_topology_key: kubernetes.io/hostname
    # Set the anti affinity type. Valid values:
    # requiredDuringSchedulingIgnoredDuringExecution - rules must be met for pod to be scheduled (hard) requires at least one node per replica
    # preferredDuringSchedulingIgnoredDuringExecution - scheduler will try to enforce but not guranentee
    type: requiredDuringSchedulingIgnoredDuringExecution
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 2
      cpu: 0.5
  extraVolumes: []
  extraVolumeMounts: []
  # Ensures 2.10.0 non-root docker image works correctly.
  securityContext:
    fsGroup: 0
    fsGroupChangePolicy: "OnRootMismatch"
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    journal:
      name: journal
      size: 100Gi
      storageClassName: fast-disks
      selector: {}
      useMultiVolumes: true
      multiVolumes:
        - name: journal0
          size: 95Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/journal0
        - name: journal1
          size: 95Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/journal1
        - name: journal2
          size: 95Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/journal2
        - name: journal3
          size: 95Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/journal3
        - name: journal4
          size: 95Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/journal4
    ledgers: 
      name: ledgers
      size: 39Gi
      local_storage: true
      storageClassName: fast-disks
      useMultiVolumes: true
      multiVolumes:
        - name: ledgers0
          size: 39Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/ledgers0
        - name: ledgers1
          size: 39Gi
          storageClassName: fast-disks
          mountPath: /pulsar/data/bookkeeper/ledgers1
    common:
      name: common
      size: 60Gi
  ## Bookkeeper configmap
  ## templates/bookkeeper-configmap.yaml
  ##
  configData:
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_MEM: >
      -Xms128m
      -Xmx500m
      -XX:MaxDirectMemorySize=1500m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
    # configure the memory settings based on jvm memory settings
    dbStorage_writeCacheMaxSizeMb: "1000"
    dbStorage_rocksDB_blockSize: "262144"
    dbStorage_readAheadCacheMaxSizeMb: "200"
    dbStorage_rocksDB_writeBufferSizeMB: "8"
    dbStorage_rocksDB_blockCacheSize: "8388608"
    writeBufferSizeBytes: "1048576"
    journalWriteBufferSizeKB: "20480"
  ## Add a custom command to the start up process of the bookie pods (e.g. update-ca-certificates, jvm commands, etc)
  additionalCommand:
  ## Bookkeeper Service
  ## templates/bookkeeper-service.yaml
  ##
  service:
    spec:
      publishNotReadyAddresses: true
  ## Bookkeeper PodDisruptionBudget
  ## templates/bookkeeper-pdb.yaml
  ##
  pdb:
    usePolicy: true
    maxUnavailable: 1