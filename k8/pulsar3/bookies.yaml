bookkeeper:
  component: bookie
  metadata:
    resources:
      # requests:
        # memory: 4Gi
        # cpu: 2
  replicaCount: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  # If using Prometheus-Operator enable this PodMonitor to discover bookie scrape targets
  # Prometheus-Operator does not add scrape targets based on k8s annotations
  podMonitor:
    enabled: false
    interval: 10s
    scrapeTimeout: 10s
  # True includes annotation for statefulset that contains hash of corresponding configmap, which will cause pods to restart on configmap change
  restartPodsOnConfigMapChange: false
  ports:
    http: 8000
    bookie: 3181
  probe:
    liveness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    readiness:
      enabled: true
      failureThreshold: 60
      initialDelaySeconds: 10
      periodSeconds: 30
      timeoutSeconds: 5
    startup:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
  affinity:
    anti_affinity: false
    type: requiredDuringSchedulingIgnoredDuringExecution
    topologyKey: zone
  annotations: {}
  tolerations: []
  gracePeriod: 30
  resources:
    requests:
      memory: 3Gi
      cpu: 0.3
  extraVolumes: []
  extraVolumeMounts: []
  volumes:
    persistence: true
    journal:
      name: journal
      size: 95Gi
      local_storage: false
      storageClassName: fast-disks
      useMultiVolumes: false
      # storageClassName: fast-disks
      # useMultiVolumes: true
      # multiVolumes:
      #   - name: journal
      #     size: 3300Gi
      #     storageClassName: fast-disks
      #     mountPath: /pulsar/data/bookkeeper/journal0
      #   - name: journal1
      #     size: 3300Gi
      #     storageClassName: fast-disks
      #     mountPath: /pulsar/data/bookkeeper/journal1
    ledgers:
      name: ledgers
      size: 19Gi
      local_storage: false
      storageClassName: fast-disks

    ## use a single common volume for both journal and ledgers
    useSingleCommonVolume: false
    common:
      name: common
      size: 60Gi
      local_storage: true
      # storageClassName:
      # storageClass: ## this is common too
        # ...

  ## Bookkeeper configmap
  ## templates/bookkeeper-configmap.yaml
  ##
  configData:
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_MEM: >
      -Xms512m
      -Xmx1000m
      -XX:MaxDirectMemorySize=2000m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
    #  -verbosegc
    #  -Xloggc:/var/log/bookie-gc.log
    #  -XX:G1LogLevel=finest
    # configure the memory settings based on jvm memory settings
    #dbStorage_writeCacheMaxSizeiMb: "1000"
    #dbStorage_readAheadCacheMaxSizeMb: "512"
    #dbStorage_rocksDB_writeBufferSizeMB: "64"
    #dbStorage_readAheadCacheMaxSizeMb: "1000"
    #    dbStorage_rocksDB_blockCacheSize: "8388608"
    #dbStorage_rocksDB_blockCacheSize: "1073741824"
    #journalMaxSizeMB: "100"
    #journalFlushWhenQueueEmpty: "true"
    #This is the ledger log file size - 100mb
    #logSizeLimit: "104857600"
    #    minorCompactionInterval: "1800"
    # gcWaitTime: "30000"
    gcWaitTime: "240000"
    # This is really important when you get stuck with out of space but with a shit load of ack'ed msgs. running this once per week is  not enough
    # auditorPeriodicBookieCheckInterval: "3600"
    # diskUsageThreshold: "0.99"
    # journalBufferedWritesThreshold: "1010485760"
    # journalMaxGroupWaitMSec: "2"
    # flushInterval: "5000"
    # pageSize: "65536"
    #numJournalCallbackThreads: "32"
    #journalWriteBufferSizeKB: "524288"
    #writeBufferSizeBytes: "10240000"
    #numAddWorkerThreads: "8"
    #byteBufAllocatorSizeMax: "52428800"
    #writeBufferSizeBytes: "671088640"
    #journalSyncData: "false"
    #numHighPriorityWorkerThreads: "64"
    #maxPendingAddRequestsPerThread: "1000000"
    #joiurnalDirectories: "/mnt/fast-disks/journal,/mnt/fast-disks/journal1"
    #dbStorage_readAheadCacheBatchSize: "10000"
  ## Bookkeeper Service
  ## templates/bookkeeper-service.yaml
  ##
  service:
    spec:
      publishNotReadyAddresses: true
  ## Bookkeeper PodDisruptionBudget
  ## templates/bookkeeper-pdb.yaml
  ##
  pdb:
    usePolicy: true
    maxUnavailable: 1

