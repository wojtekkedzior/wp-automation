# Docker Upstart and SysVinit configuration file

#
# THIS FILE DOES NOT APPLY TO SYSTEMD
#
#   Please see the documentation for "systemd drop-ins":
#   https://docs.docker.com/engine/admin/systemd/
#

# Customize location of Docker binary (especially for development testing).
#DOCKERD="/usr/local/bin/dockerd"

# Use DOCKER_OPTS to modify the daemon startup options.
#DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4"

# If you need Docker to use an HTTP proxy, it can also be specified here.
#export http_proxy="http://127.0.0.1:3128/"

# This is also a handy place to tweak where Docker's temporary files go.
#export DOCKER_TMPDIR="/mnt/bigdrive/docker-tmp"

DOCKER_OPTS="--insecure-registry=192.168.1.116:5000"

#DOCKER_OPTS="--config-file=/etc/docker/daemon.json"








journalctl -f

sudo ctr plugin ls


w@cp:~$ cat /etc/containerd/config.toml
#   Copyright 2018-2022 Docker Inc.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

disabled_plugins = ["cri"]

#root = "/var/lib/containerd"
#state = "/run/containerd"
#subreaper = true
#oom_score = 0

#[grpc]
#  address = "/run/containerd/containerd.sock"
#  uid = 0
#  gid = 0

#[debug]
#  address = "/run/containerd/debug.sock"
#  uid = 0
#  gid = 0
#  level = "info"



/var/lib/kubelet/kubeadm-flags.env

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://dl.k8s.io/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update -y

sudo apt-get install -y kubelet kubeadm kubectl

sudo kubeadm init phase kubelet-start


### On the workers:
sudo rm /etc/containerd/config.toml

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://dl.k8s.io/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update -y

sudo apt-get install -y kubelet kubeadm kubectl

sudo vi /etc/containerd/config.toml needs:
enabled_plugins = ["cri"]
[plugins."io.containerd.grpc.v1.cri".containerd]
  endpoint = "unix:///var/run/containerd/containerd.sock"

sudo systemctl restart containerd.service && sudo systemctl status containerd.service
sudo systemctl restart kubelet && sudo systemctl status kubelet

# get this from initout 
sudo kubeadm join 192.168.100.205:6443 --token 5tgjqj.ccvqvdnkrwka2ebc \
	--discovery-token-ca-cert-hash sha256:bae2936568b18935ad4c09c12ab2eea5e40a58f921572521e2eaf36d7445e0b0 

sudo kubeadm upgrade node



do everywhere
 sudo systemctl stop apparmor
 sudo systemctl disable apparmor
sudo apt remove --assume-yes --purge apparmor

# these won't survive a reboot
sudo systemctl stop apparmor
sudo systemctl disable apparmor 
sudo systemctl restart containerd.service
sudo aa-teardown


https://serverfault.com/questions/1104591/error-failed-to-parse-kubelet-flag-unknown-flag-network-plugin
https://mohitgoyal.co/2021/04/05/going-down-the-rabbit-hole-of-docker-engine-containerd/